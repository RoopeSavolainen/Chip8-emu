#include <iostream>
#include <cstring>

#include "memory.hpp"

uint8_t memory[0x1000] = {0};

bool read_program(char *fname)
{
    FILE *f = fopen(fname, "r");
    if (!f) {
        std::cerr << "Could not open '" << fname << "'." << std::endl;
        return false;
    }
    fseek(f, 0, SEEK_END);
    int len = ftell(f);
    fseek(f, 0, SEEK_SET);
    if (len > 0xe00) {
        std::cerr << "The input file " << fname << " is too large; 0x" << std::hex << len << " bytes." << std::endl;
        return false;
    }

    int prg_it = 0x200;
    while (!feof(f))
        memory[prg_it++] = fgetc(f);
    fclose(f);

    // Initialize the font area
    uint8_t font[0x10][5] = {
        {0xf0, 0x90, 0x90, 0x90, 0xf0},
        {0x20, 0x60, 0x20, 0x20, 0x70},
        {0xf0, 0x10, 0xf0, 0x80, 0xf0},
        {0xf0, 0x10, 0xf0, 0x10, 0xf0},
        {0x90, 0x90, 0xf0, 0x10, 0x10},
        {0xf0, 0x80, 0xf0, 0x10, 0xf0},
        {0xf0, 0x80, 0xf0, 0x90, 0xf0},
        {0xf0, 0x10, 0x20, 0x40, 0x40},
        {0xf0, 0x90, 0xf0, 0x90, 0xf0},
        {0xf0, 0x90, 0xf0, 0x10, 0xf0},
        {0xf0, 0x90, 0xf0, 0x90, 0x90},
        {0xe0, 0x90, 0xe0, 0x10, 0xe0},
        {0xf0, 0x80, 0x80, 0x80, 0xf0},
        {0xe0, 0x90, 0x90, 0x90, 0xe0},
        {0xf0, 0x80, 0xf0, 0x80, 0xf0},
        {0xf0, 0x80, 0xf0, 0x80, 0x80},
    };
    std::memcpy(memory + FONT_ADDR, font, 5*0x10);
    

    return true;
}
